<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ru.stqa.pft.addressbook.tests.ContactModificationTests" tests="1" skipped="0" failures="1" errors="0" timestamp="2017-07-20T16:27:24" hostname="HOMETWO" time="10.024">
  <properties/>
  <testcase name="testContactModification" classname="ru.stqa.pft.addressbook.tests.ContactModificationTests" time="10.024">
    <failure message="java.lang.AssertionError: &#10;Expected: &lt;[ContactData{id='103', firstname='Vladimir', lastname='Putin'}, ContactData{id='116', firstname='lastname1', lastname='firstname1'}, ContactData{id='118', firstname='lastname3', lastname='firstname3'}, ContactData{id='112', firstname='Putin', lastname='Vladimir'}, ContactData{id='111', firstname='Putin', lastname='Vladimir'}, ContactData{id='110', firstname='Putin', lastname='Vladimir'}, ContactData{id='109', firstname='Vladimir', lastname='Putin'}, ContactData{id='108', firstname='Vladimir', lastname='Putin'}, ContactData{id='113', firstname='lastname1', lastname='firstname1'}, ContactData{id='107', firstname='Vladimir', lastname='Putin'}, ContactData{id='106', firstname='Vladimir', lastname='Putin'}, ContactData{id='128', firstname='lastname 0', lastname='firstname 0'}, ContactData{id='127', firstname='lastname 2', lastname='firstname 2'}, ContactData{id='130', firstname='lastname 2', lastname='firstname 2'}, ContactData{id='121', firstname='lastname 2', lastname='firstname 2'}, ContactData{id='119', firstname='lastname 0', lastname='firstname 0'}, ContactData{id='124', firstname='lastname 2', lastname='firstname 2'}, ContactData{id='125', firstname='lastname 0', lastname='firstname 0'}, ContactData{id='122', firstname='lastname 0', lastname='firstname 0'}, ContactData{id='114', firstname='lastname2', lastname='firstname2'}, ContactData{id='117', firstname='lastname2', lastname='firstname2'}, ContactData{id='104', firstname='Donald', lastname='Trump'}, ContactData{id='102', firstname='Trump', lastname='Donald'}, ContactData{id='101', firstname='Trump', lastname='Donald'}, ContactData{id='100', firstname='Trump', lastname='Donald'}, ContactData{id='129', firstname='lastname 1', lastname='firstname 1'}, ContactData{id='126', firstname='lastname 1', lastname='firstname 1'}, ContactData{id='120', firstname='lastname 1', lastname='firstname 1'}, ContactData{id='123', firstname='lastname 1', lastname='firstname 1'}]&gt;&#10;     but: was &lt;[ContactData{id='104', firstname='Vladimir', lastname='Putin'}, ContactData{id='103', firstname='Vladimir', lastname='Putin'}, ContactData{id='116', firstname='lastname1', lastname='firstname1'}, ContactData{id='118', firstname='lastname3', lastname='firstname3'}, ContactData{id='112', firstname='Putin', lastname='Vladimir'}, ContactData{id='111', firstname='Putin', lastname='Vladimir'}, ContactData{id='110', firstname='Putin', lastname='Vladimir'}, ContactData{id='109', firstname='Vladimir', lastname='Putin'}, ContactData{id='108', firstname='Vladimir', lastname='Putin'}, ContactData{id='113', firstname='lastname1', lastname='firstname1'}, ContactData{id='107', firstname='Vladimir', lastname='Putin'}, ContactData{id='106', firstname='Vladimir', lastname='Putin'}, ContactData{id='128', firstname='lastname 0', lastname='firstname 0'}, ContactData{id='127', firstname='lastname 2', lastname='firstname 2'}, ContactData{id='130', firstname='lastname 2', lastname='firstname 2'}, ContactData{id='121', firstname='lastname 2', lastname='firstname 2'}, ContactData{id='124', firstname='lastname 2', lastname='firstname 2'}, ContactData{id='125', firstname='lastname 0', lastname='firstname 0'}, ContactData{id='122', firstname='lastname 0', lastname='firstname 0'}, ContactData{id='114', firstname='lastname2', lastname='firstname2'}, ContactData{id='117', firstname='lastname2', lastname='firstname2'}, ContactData{id='102', firstname='Trump', lastname='Donald'}, ContactData{id='101', firstname='Trump', lastname='Donald'}, ContactData{id='100', firstname='Trump', lastname='Donald'}, ContactData{id='129', firstname='lastname 1', lastname='firstname 1'}, ContactData{id='126', firstname='lastname 1', lastname='firstname 1'}, ContactData{id='120', firstname='lastname 1', lastname='firstname 1'}, ContactData{id='119', firstname='Trump', lastname='Donald'}, ContactData{id='123', firstname='lastname 1', lastname='firstname 1'}]&gt;" type="java.lang.AssertionError">java.lang.AssertionError: 
Expected: &lt;[ContactData{id='103', firstname='Vladimir', lastname='Putin'}, ContactData{id='116', firstname='lastname1', lastname='firstname1'}, ContactData{id='118', firstname='lastname3', lastname='firstname3'}, ContactData{id='112', firstname='Putin', lastname='Vladimir'}, ContactData{id='111', firstname='Putin', lastname='Vladimir'}, ContactData{id='110', firstname='Putin', lastname='Vladimir'}, ContactData{id='109', firstname='Vladimir', lastname='Putin'}, ContactData{id='108', firstname='Vladimir', lastname='Putin'}, ContactData{id='113', firstname='lastname1', lastname='firstname1'}, ContactData{id='107', firstname='Vladimir', lastname='Putin'}, ContactData{id='106', firstname='Vladimir', lastname='Putin'}, ContactData{id='128', firstname='lastname 0', lastname='firstname 0'}, ContactData{id='127', firstname='lastname 2', lastname='firstname 2'}, ContactData{id='130', firstname='lastname 2', lastname='firstname 2'}, ContactData{id='121', firstname='lastname 2', lastname='firstname 2'}, ContactData{id='119', firstname='lastname 0', lastname='firstname 0'}, ContactData{id='124', firstname='lastname 2', lastname='firstname 2'}, ContactData{id='125', firstname='lastname 0', lastname='firstname 0'}, ContactData{id='122', firstname='lastname 0', lastname='firstname 0'}, ContactData{id='114', firstname='lastname2', lastname='firstname2'}, ContactData{id='117', firstname='lastname2', lastname='firstname2'}, ContactData{id='104', firstname='Donald', lastname='Trump'}, ContactData{id='102', firstname='Trump', lastname='Donald'}, ContactData{id='101', firstname='Trump', lastname='Donald'}, ContactData{id='100', firstname='Trump', lastname='Donald'}, ContactData{id='129', firstname='lastname 1', lastname='firstname 1'}, ContactData{id='126', firstname='lastname 1', lastname='firstname 1'}, ContactData{id='120', firstname='lastname 1', lastname='firstname 1'}, ContactData{id='123', firstname='lastname 1', lastname='firstname 1'}]&gt;
     but: was &lt;[ContactData{id='104', firstname='Vladimir', lastname='Putin'}, ContactData{id='103', firstname='Vladimir', lastname='Putin'}, ContactData{id='116', firstname='lastname1', lastname='firstname1'}, ContactData{id='118', firstname='lastname3', lastname='firstname3'}, ContactData{id='112', firstname='Putin', lastname='Vladimir'}, ContactData{id='111', firstname='Putin', lastname='Vladimir'}, ContactData{id='110', firstname='Putin', lastname='Vladimir'}, ContactData{id='109', firstname='Vladimir', lastname='Putin'}, ContactData{id='108', firstname='Vladimir', lastname='Putin'}, ContactData{id='113', firstname='lastname1', lastname='firstname1'}, ContactData{id='107', firstname='Vladimir', lastname='Putin'}, ContactData{id='106', firstname='Vladimir', lastname='Putin'}, ContactData{id='128', firstname='lastname 0', lastname='firstname 0'}, ContactData{id='127', firstname='lastname 2', lastname='firstname 2'}, ContactData{id='130', firstname='lastname 2', lastname='firstname 2'}, ContactData{id='121', firstname='lastname 2', lastname='firstname 2'}, ContactData{id='124', firstname='lastname 2', lastname='firstname 2'}, ContactData{id='125', firstname='lastname 0', lastname='firstname 0'}, ContactData{id='122', firstname='lastname 0', lastname='firstname 0'}, ContactData{id='114', firstname='lastname2', lastname='firstname2'}, ContactData{id='117', firstname='lastname2', lastname='firstname2'}, ContactData{id='102', firstname='Trump', lastname='Donald'}, ContactData{id='101', firstname='Trump', lastname='Donald'}, ContactData{id='100', firstname='Trump', lastname='Donald'}, ContactData{id='129', firstname='lastname 1', lastname='firstname 1'}, ContactData{id='126', firstname='lastname 1', lastname='firstname 1'}, ContactData{id='120', firstname='lastname 1', lastname='firstname 1'}, ContactData{id='119', firstname='Trump', lastname='Donald'}, ContactData{id='123', firstname='lastname 1', lastname='firstname 1'}]&gt;
	at org.hamcrest.junit.MatcherAssert$1.mismatch(MatcherAssert.java:19)
	at org.hamcrest.junit.internal.Matching.checkMatch(Matching.java:20)
	at org.hamcrest.junit.MatcherAssert.assertThat(MatcherAssert.java:16)
	at org.hamcrest.junit.MatcherAssert.assertThat(MatcherAssert.java:12)
	at ru.stqa.pft.addressbook.tests.ContactModificationTests.testContactModification(ContactModificationTests.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:129)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:88)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy1.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:120)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
